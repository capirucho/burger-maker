{"version":3,"sources":["components/burger/ingredients/burgerIngredients.module.css","components/burger/build_controls/control/BuildControl.module.css","components/burger/build_controls/BuildControls.module.css","components/ui/button/Button.module.css","components/layout/Layout.module.css","components/burger/Burger.module.css","components/ui/backdrop/Backdrop.module.css","components/ui/modal/Modal.module.css","hoc/Aux.js","components/layout/Layout.js","components/burger/ingredients/burgerIngredients.js","components/burger/Burger.js","components/burger/build_controls/control/BuildControl.js","components/burger/build_controls/BuildControls.js","components/ui/backdrop/Backdrop.js","components/ui/modal/Modal.js","components/ui/button/Button.js","components/burger/order_summary/OrderSummary.js","containers/burgerbuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","layout","Aux","className","classes","content","BurgerIngredient","ingredient","this","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Lettuce","Bacon","Component","burger","transformedIngredients","Object","keys","ingredients","map","ingredientKey","Array","_","i","key","reduce","arr","el","concat","length","console","log","Burger","buildControl","BuildControl","Label","label","Less","onClick","removeIngredient","disabled","More","addIngredient","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","clickedOrderBtn","backdrop","show","Backdrop","modalClicked","modal","hideModal","Modal","style","transform","opacity","button","Button","btnType","join","clicked","orderSummary","ingredientSummary","textTransform","cancelOrder","continueWithOrder","INGREDIENT_PRICES","lettuce","cheese","meat","bacon","BurgerBuilder","state","totalPrice","orderStatus","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","setState","updatePurchaseState","removeIngredientHandler","oldCount","priceDeduction","orderHandler","cancelOrderHandler","orderContinueHandler","alert","sum","disabledInfo","OrderSummary","App","Layout","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,YAAc,uCAAuC,SAAW,oCAAoC,OAAS,kCAAkC,OAAS,kCAAkC,KAAO,gCAAgC,OAAS,kCAAkC,QAAU,mCAAmC,MAAQ,mC,qBCAnVD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,KAAO,2BAA2B,KAAO,6B,gBCAjJD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,YAAc,mCAAmC,OAAS,gC,gBCAjID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,yB,kBCA7FD,EAAOC,QAAU,CAAC,QAAU,0B,iBCA5BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,MAAQ,uB,4KCCXC,EAFH,SAACC,GAAD,OAAWA,EAAMC,U,iBCadC,EATA,SAAEF,GAAF,OACX,kBAACG,EAAD,KACI,8DACA,0BAAMC,UAAWC,IAAQC,SACpBN,EAAMC,Y,iDCsCJM,E,iLAvCP,IAAIC,EAAa,KAEjB,OAAQC,KAAKT,MAAMU,MAEf,IAAM,eACFF,EAAa,yBAAKJ,UAAWC,IAAQM,cACrC,MACJ,IAAM,YACFH,EACI,yBAAKJ,UAAWC,IAAQO,UACpB,yBAAKR,UAAWC,IAAQQ,SACxB,yBAAKT,UAAWC,IAAQS,UAGhC,MACJ,IAAM,OACFN,EAAa,yBAAKJ,UAAWC,IAAQU,OACrC,MACJ,IAAM,SACFP,EAAa,yBAAKJ,UAAWC,IAAQW,SACrC,MACJ,IAAM,UACFR,EAAa,yBAAKJ,UAAWC,IAAQY,UACrC,MACJ,IAAM,QACFT,EAAa,yBAAKJ,UAAWC,IAAQa,QACrC,MACJ,QACIV,EAAa,KAGrB,OAAOA,M,GAjCgBW,aCwBhBC,EAxBA,SAACpB,GACZ,IAAIqB,EAAyBC,OAAOC,KAAKvB,EAAMwB,aAC1CC,KAAI,SAAAC,GACD,OAAO,YAAIC,MAAM3B,EAAMwB,YAAYE,KAClCD,KAAI,SAACG,EAAGC,GACL,OAAO,kBAAC,EAAD,CAAkBC,IAAKJ,EAAgBG,EAAGnB,KAAMgB,UAG9DK,QAAO,SAACC,EAAKC,GACV,OAAOD,EAAIE,OAAOD,KACnB,IAKP,OAJ0C,IAAlCZ,EAAuBc,SACvBd,EAAyB,sDAE7Be,QAAQC,IAAIhB,GAEZ,yBAAKjB,UAAWC,IAAQiC,QACpB,kBAAC,EAAD,CAAkB5B,KAAK,cACtBW,EACD,kBAAC,EAAD,CAAkBX,KAAK,mB,gCCRpB6B,EAbM,SAACvC,GAAD,OACjB,yBAAKI,UAAWC,IAAQmC,cACpB,yBAAKpC,UAAWC,IAAQoC,OAAQzC,EAAM0C,OACtC,4BACItC,UAAWC,IAAQsC,KACnBC,QAAS5C,EAAM6C,iBACfC,SAAU9C,EAAM8C,UAHpB,QAIA,4BACI1C,UAAWC,IAAQ0C,KACnBH,QAAS5C,EAAMgD,eAFnB,UCNFC,EAAW,CACb,CAAEP,MAAO,UAAWhC,KAAM,WAC1B,CAAEgC,MAAO,QAAShC,KAAM,SACxB,CAAEgC,MAAO,SAAUhC,KAAM,UACzB,CAAEgC,MAAO,OAAQhC,KAAM,SAoBZwC,EAlBO,SAAClD,GAAD,OAClB,yBAAKI,UAAWC,IAAQ8C,eACpB,6CAAkB,gCAASnD,EAAMoD,MAAMC,QAAQ,KAC9CJ,EAASxB,KAAI,SAAA6B,GAAI,OACd,kBAACd,EAAD,CACIV,IAAKwB,EAAKZ,MACVA,MAAOY,EAAKZ,MACZM,cAAe,kBAAMhD,EAAMuD,gBAAgBD,EAAK5C,OAChDmC,iBAAkB,kBAAM7C,EAAMwD,kBAAkBF,EAAK5C,OACrDoC,SAAU9C,EAAM8C,SAASQ,EAAK5C,WAEtC,4BACIN,UAAWC,IAAQoD,YACnBX,UAAW9C,EAAM0D,YACjBd,QAAS5C,EAAM2D,iBAHnB,e,iBCdOC,EAJE,SAAC5D,GAAD,OACbA,EAAM6D,KAAO,yBAAKzD,UAAWC,IAAQyD,SAAUlB,QAAS5C,EAAM+D,eAAuB,M,iBCgB1EC,EAfD,SAAChE,GAAD,OACV,kBAACG,EAAD,KACI,kBAAC2D,EAAD,CAAUD,KAAM7D,EAAM6D,KAAME,aAAc/D,EAAMiE,YAChD,yBACI7D,UAAWC,IAAQ6D,MACnBC,MAAO,CACHC,UAAWpE,EAAM6D,KAAO,gBAAkB,qBAC1CQ,QAASrE,EAAM6D,KAAO,IAAM,MAE/B7D,EAAMC,Y,gBCLJqE,EANA,SAACtE,GAAD,OACX,4BACII,UAAW,CAACC,IAAQkE,OAAQlE,IAAQL,EAAMwE,UAAUC,KAAK,KACzD7B,QAAS5C,EAAM0E,SAAU1E,EAAMC,WCuBxB0E,EAzBM,SAAC3E,GAClB,IAAM4E,EAAoBtD,OAAOC,KAAKvB,EAAMwB,aACvCC,KAAI,SAAAC,GACD,OACI,wBAAII,IAAKJ,GACL,0BAAMyC,MAAO,CAACU,cAAe,eAAgBnD,GADjD,KACyE1B,EAAMwB,YAAYE,OAIvG,OACI,kBAACvB,EAAD,KACI,0CACA,yDACA,4BACSyE,GAET,2BAAG,iDAAuB5E,EAAMoD,QAChC,mDACA,kBAACmB,EAAD,CAAQC,QAAQ,SAASE,QAAS1E,EAAM8E,aAAxC,UACA,kBAACP,EAAD,CAAQC,QAAQ,UAAUE,QAAS1E,EAAM+E,mBAAzC,c,yjBChBZ,IAAMC,EAAoB,CACtBC,QAAS,GACTC,OAAQ,GACRC,KAAM,IACNC,MAAO,IAgHIC,E,2MAxGXC,MAAQ,CACJ9D,YAAa,CACTyD,QAAS,EACTG,MAAO,EACPF,OAAQ,EACRC,KAAM,GAEVI,WAAY,EACZ7B,aAAa,EACb8B,aAAa,G,EAkBjBC,qBAAuB,SAAC/E,GACpB,IACMgF,EADW,EAAKJ,MAAM9D,YAAYd,GACR,EAC1BiF,EAAkB,KACjB,EAAKL,MAAM9D,aAGlBmE,EAAmBjF,GAAQgF,EAC3B,IAAME,EAAgBZ,EAAkBtE,GAElCmF,EADW,EAAKP,MAAMC,WACAK,EAC5B,EAAKE,SAAS,CAACP,WAAYM,EAAUrE,YAAamE,IAClD,EAAKI,oBAAoBJ,I,EAG7BK,wBAA0B,SAACtF,GACvB,IAAMuF,EAAW,EAAKX,MAAM9D,YAAYd,GACxC,KAAGuF,GAAY,GAAf,CAGA,IAAMP,EAAeO,EAAW,EAC1BN,EAAkB,KACjB,EAAKL,MAAM9D,aAGlBmE,EAAmBjF,GAAQgF,EAC3B,IAAMQ,EAAiBlB,EAAkBtE,GAEnCmF,EADW,EAAKP,MAAMC,WACAW,EAC5B,EAAKJ,SAAS,CAACP,WAAYM,EAAUrE,YAAamE,IAClD,EAAKI,oBAAoBJ,K,EAG7BQ,aAAe,WACX,EAAKL,SAAS,CAACN,aAAa,K,EAGhCY,mBAAqB,WACjB,EAAKN,SAAS,CAACN,aAAa,K,EAGhCa,qBAAuB,WACnBC,MAAM,wB,mFAzDU9E,GAKhB,IAAM+E,EAAMjF,OAAOC,KAAKC,GACnBC,KAAI,SAAAC,GACD,OAAOF,EAAYE,MAEtBK,QAAO,SAACwE,EAAKtE,GACX,OAAOsE,EAAMtE,IACb,GACPxB,KAAKqF,SAAS,CAACpC,YAAa6C,EAAM,M,+BAkDlC,IAAMC,EAAY,KACX/F,KAAK6E,MAAM9D,aAGlB,IAAK,IAAIM,KAAO0E,EACZA,EAAa1E,GAAO0E,EAAa1E,IAAQ,EAG7C,OACI,kBAAC3B,EAAD,KACI,kBAAC+D,EAAD,CAAOL,KAAMpD,KAAK6E,MAAME,YAAavB,UAAWxD,KAAK2F,oBACjD,kBAACK,EAAD,CACIjF,YAAaf,KAAK6E,MAAM9D,YACxB4B,MAAO3C,KAAK6E,MAAMC,WAAWlC,QAAQ,GACrCyB,YAAarE,KAAK2F,mBAClBrB,kBAAmBtE,KAAK4F,wBAEhC,kBAAC/D,EAAD,CAAQd,YAAaf,KAAK6E,MAAM9D,cAChC,kBAAC2B,EAAD,CACII,gBAAiB9C,KAAKgF,qBACtBjC,kBAAmB/C,KAAKuF,wBACxBlD,SAAU0D,EACV9C,YAAajD,KAAK6E,MAAM5B,YACxBC,gBAAiBlD,KAAK0F,aACtB/C,MAAO3C,KAAK6E,MAAMC,kB,GAxGVpE,aCGbuF,E,iLAVX,OACE,6BACE,kBAACC,EAAD,KACE,kBAAC,EAAD,Y,GALQxF,aCQEyF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.cf1de862.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"burgerIngredients_BreadBottom__3dbhE\",\"BreadTop\":\"burgerIngredients_BreadTop__ZbeqD\",\"Seeds1\":\"burgerIngredients_Seeds1__2f3sg\",\"Seeds2\":\"burgerIngredients_Seeds2__3nll-\",\"Meat\":\"burgerIngredients_Meat__2NHoz\",\"Cheese\":\"burgerIngredients_Cheese__19hwe\",\"Lettuce\":\"burgerIngredients_Lettuce__2UYD8\",\"Bacon\":\"burgerIngredients_Bacon__3r1wK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3PpQE\",\"Label\":\"BuildControl_Label__khJ1z\",\"Less\":\"BuildControl_Less__-P6HS\",\"More\":\"BuildControl_More__3UkKJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__pEoZv\",\"OrderButton\":\"BuildControls_OrderButton__wtAQS\",\"enable\":\"BuildControls_enable__2QUUI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__113nY\",\"Success\":\"Button_Success__2eDyZ\",\"Danger\":\"Button_Danger__3_L7A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Layout_content__2zCUh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__cUT8f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3O7J2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2wcx1\"};","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport Aux from '../../hoc/Aux';\nimport classes from './Layout.module.css'\n\nconst layout = ( props ) => (\n    <Aux>\n        <div>Toolbar, SideDrawer, Backdrop</div>\n        <main className={classes.content}>\n            {props.children}\n        </main>       \n    </Aux>\n);\n\nexport default layout;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './burgerIngredients.module.css'\n\nclass BurgerIngredient extends Component {\n    render() {\n        let ingredient = null;\n\n        switch (this.props.type) {\n    \n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case ('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n            case ('meat'):\n                ingredient = <div className={classes.Meat}></div>;\n                break;\n            case ('cheese'):\n                ingredient = <div className={classes.Cheese}></div>;\n                break;\n            case ('lettuce'):\n                ingredient = <div className={classes.Lettuce}></div>;\n                break;\n            case ('bacon'):\n                ingredient = <div className={classes.Bacon}></div>;\n                break;\n            default:\n                ingredient = null;    \n        }\n\n        return ingredient;\n    }\n} \n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import React from 'react';\n\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './ingredients/burgerIngredients';\n\nconst burger = (props) => {\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(ingredientKey => {\n            return [...Array(props.ingredients[ingredientKey])]\n            .map((_, i) => {\n                return <BurgerIngredient key={ingredientKey + i} type={ingredientKey} />;\n            });\n        })\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n        if (transformedIngredients.length === 0 ) {\n            transformedIngredients = <p>Please add ingredients</p>;\n        }\n        console.log(transformedIngredients);\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}            \n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n}\n\nexport default burger;","import React from 'react';\nimport classes from './BuildControl.module.css';\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n            className={classes.Less} \n            onClick={props.removeIngredient} \n            disabled={props.disabled}>Less</button>\n        <button \n            className={classes.More} \n            onClick={props.addIngredient}>More</button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\nimport classes from './BuildControls.module.css';\nimport BuildControl from './control/BuildControl';\n\nconst controls = [\n    { label: 'Lettuce', type: 'lettuce' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n];\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl \n                key={ctrl.label} \n                label={ctrl.label} \n                addIngredient={() => props.ingredientAdded(ctrl.type)} \n                removeIngredient={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]} />\n        ))}\n        <button \n            className={classes.OrderButton}\n            disabled={!props.purchasable}\n            onClick={props.clickedOrderBtn}>ORDER NOW</button>\n    </div>\n);\n\nexport default buildControls;","import React from 'react';\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.modalClicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\nimport Aux from '../../../hoc/Aux';\nimport Backdrop from '../backdrop/Backdrop';\nimport classes from './Modal.module.css';\n\nconst modal = (props) => (\n    <Aux>\n        <Backdrop show={props.show} modalClicked={props.hideModal} />\n        <div \n            className={classes.Modal}\n            style={{\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: props.show ? '1' : '0'\n            }}>\n            {props.children}\n        </div>       \n    </Aux>\n\n);\n\nexport default modal;","import React from 'react';\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n    <button\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;","import React from 'react';\nimport Aux from '../../../hoc/Aux';\nimport Button from '../../ui/button/Button';\n\nconst orderSummary = (props) => {\n    const ingredientSummary = Object.keys(props.ingredients)\n        .map(ingredientKey => {\n            return (\n                <li key={ingredientKey}>\n                    <span style={{textTransform: 'capitalize'}}>{ingredientKey}</span>: {props.ingredients[ingredientKey]}\n                </li>);       \n        });\n    \n    return (\n        <Aux>\n            <h3>Your Order</h3>\n            <p>Bam!! Here is your burger:</p>\n            <ul>\n                    {ingredientSummary}\n            </ul>\n            <p><strong>Total Price: ${props.price}</strong></p>\n            <p>Contine to Checkout?</p>\n            <Button btnType=\"Danger\" clicked={props.cancelOrder}>CANCEL</Button>\n            <Button btnType=\"Success\" clicked={props.continueWithOrder}>CONTINUE</Button>\n        </Aux>\n    );\n\n};\n\nexport default orderSummary;","import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/burger/Burger';\nimport BuildControls from '../../components/burger/build_controls/BuildControls';\nimport Modal from '../../components/ui/modal/Modal';\nimport OrderSummary from '../../components/burger/order_summary/OrderSummary';\n\nconst INGREDIENT_PRICES = {\n    lettuce: 0.3,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.5\n}\nclass BurgerBuilder extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {...}\n    // }\n\n    state = {\n        ingredients: {\n            lettuce: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        totalPrice: 4,\n        purchasable: false,\n        orderStatus: false\n    }\n\n    updatePurchaseState(ingredients) {\n        // const ingredients = {\n        //     ...this.state.ingredients\n        // };\n\n        const sum = Object.keys(ingredients)\n            .map(ingredientKey => {\n                return ingredients[ingredientKey];\n            })\n            .reduce((sum, el) => {\n               return sum + el; \n            }, 0);\n        this.setState({purchasable: sum > 0});\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if(oldCount <= 0) {\n            return;\n        }\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n\n        updatedIngredients[type] = updatedCount;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);      \n    }\n\n    orderHandler = () => {\n        this.setState({orderStatus: true});\n    }\n\n    cancelOrderHandler = () => {\n        this.setState({orderStatus: false});\n    }\n\n    orderContinueHandler = () => {\n        alert('Continue with Order');\n    }\n\n\n    render() {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n\n        return (\n            <Aux>\n                <Modal show={this.state.orderStatus} hideModal={this.cancelOrderHandler} >\n                    <OrderSummary \n                        ingredients={this.state.ingredients} \n                        price={this.state.totalPrice.toFixed(2)} \n                        cancelOrder={this.cancelOrderHandler} \n                        continueWithOrder={this.orderContinueHandler}/>\n                </Modal>    \n                <Burger ingredients={this.state.ingredients} />\n                <BuildControls \n                    ingredientAdded={this.addIngredientHandler} \n                    ingredientRemoved={this.removeIngredientHandler} \n                    disabled={disabledInfo} \n                    purchasable={this.state.purchasable} \n                    clickedOrderBtn={this.orderHandler}\n                    price={this.state.totalPrice} />\n            </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder;","import React, {Component} from 'react';\nimport Layout from './components/layout/Layout';\nimport BurgerBuilder from './containers/burgerbuilder/BurgerBuilder';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <BurgerBuilder />\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}